<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Android开发-添加大文件弹窗</title>
      <link href="/2022/10/22/android-kai-fa-tian-jia-da-wen-jian-dan-chuang/"/>
      <url>/2022/10/22/android-kai-fa-tian-jia-da-wen-jian-dan-chuang/</url>
      
        <content type="html"><![CDATA[<p><img src="01.jpeg"></p><h2 id="1-将弹窗绘制好，两种方案：一是修改原View，二是使用dialog。"><a href="#1-将弹窗绘制好，两种方案：一是修改原View，二是使用dialog。" class="headerlink" title="1.将弹窗绘制好，两种方案：一是修改原View，二是使用dialog。"></a>1.将弹窗绘制好，两种方案：一是修改原View，二是使用dialog。</h2><p>最后方案使用自定义Dialog实现弹窗，自定义了一个xml。外层为linearlayout，包含一个imageview,</p><p>3个textview，文字和图片都是居中显式，高宽根据文字内容决定。</p><p>处理最后一个textview的点击事件，使用类内接口，在调用时传入接口参数判断点击事件，调用AgreeClick()方法。</p><p>用到Window对象设置弹窗大小、位置、动画。通过getWindow()获得Window对象，后set各种属性。新建一个drawable.xml，在里面设置Window的弧度。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">window.setGravity(Gravity.BOTTOM);//弹窗位置window.setBackgroundDrawableResource(R.drawable.large_file_folder_dialog_shape);//弹窗背景window.setWindowAnimations(R.style.large_folder_dialog);//弹窗动画window.setDimAmount(0f);//全透明<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>为了设置Dialog窗口大小和布局，使用Resources中的getDisplayMetrics()方法获得DisplayMetrics类对象，通过其中的.widthPixels()和.heightPixels()得到手机的宽和高。</p><p>通过WindowManager.LayoutParams创建一个params对象，通过.attr设置window的宽高和相对位置，最后一定要调用window的.setAttributes(params)将参数传递进去才能有效果。</p><p>窗口底边高度要配合导航栏高度。直接把mInitY传给window的高度就行。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">Launcher launcher = Launcher.fromContext(context);if (launcher != null &amp;&amp; launcher.getDeviceProfile() != null){    mInitY = launcher.getDeviceProfile().getInsets().bottom;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最后定义一个静态方法show用来给外部类提供方法，方法内部新建一个自定义的dialog并监听点击事件，调用.dissmiss()来消除dialog。</p><h2 id="2-弹窗绘制好后实现逻辑，触发的四种逻辑。"><a href="#2-弹窗绘制好后实现逻辑，触发的四种逻辑。" class="headerlink" title="2.弹窗绘制好后实现逻辑，触发的四种逻辑。"></a>2.弹窗绘制好后实现逻辑，触发的四种逻辑。</h2><h3 id="1：首次长按文件夹（大-小）。"><a href="#1：首次长按文件夹（大-小）。" class="headerlink" title="1：首次长按文件夹（大/小）。"></a>1：首次长按文件夹（大/小）。</h3><p>ItemLongClickListener类下的onWorkspaceItemLongClick()添加逻辑。因为所有Item的长按逻辑都在这个方法里实现，所以需要进行判断。通过view.getTag()判断是文件夹还是app快捷方式。判断完成后在进行show的调用。</p><h3 id="2：首次点击文件夹（大-小）。"><a href="#2：首次点击文件夹（大-小）。" class="headerlink" title="2：首次点击文件夹（大/小）。"></a>2：首次点击文件夹（大/小）。</h3><p>ItemClickHandler类下的onClickFolderIcon()和onClickBigFolderIcon()中添加逻辑。根据SharedPreference保存的数据判断NewLargeFolderDialog.show()的调用。</p><h3 id="3：首次合并应用形成文件夹。"><a href="#3：首次合并应用形成文件夹。" class="headerlink" title="3：首次合并应用形成文件夹。"></a>3：首次合并应用形成文件夹。</h3><p>合并生成文件夹的逻辑是在Workspace.java下的createUserFolderIfNecessary()方法里实现，只需要在方法return之前调用show()方法就行。</p><h3 id="4：首次拖动应用进入文件夹）"><a href="#4：首次拖动应用进入文件夹）" class="headerlink" title="4：首次拖动应用进入文件夹）"></a>4：首次拖动应用进入文件夹）</h3><p>合并生成文件夹的逻辑是在Workspace.java下的addToExistingFolderIfNecessary()方法里实现，和第三条同理。</p><h2 id="3-设置sharedPreference，保存是否是第一次操作的参数，bool类型。"><a href="#3-设置sharedPreference，保存是否是第一次操作的参数，bool类型。" class="headerlink" title="3.设置sharedPreference，保存是否是第一次操作的参数，bool类型。"></a>3.设置sharedPreference，保存是否是第一次操作的参数，bool类型。</h2><p>因为要实现第一次点击之后就不需要弹出Dialog，需要一个数据进行判断，SharedPreference保存的数据会存在一个文件下，launcher中在Utilities中定义了一个getPref(Context context)方法，返回的就是一个SharedPreference对象，只需要在调用时传入context就好。</p><p>存入数据的逻辑是在show()方法中的监听点击事件里定义，在点击“知道了”以后put一个bool类型的值然后apply，接着走dissmiss()，这样只要走过四种逻辑中的任意一个，就会写入值。写入需要使用SharedPreferences.Editor对象编写。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">SharedPreferences.Editor mUserAgreeSharedPref = Utilities.getPrefs(context).edit();mUserAgreeSharedPref.putBoolean("first_new_large_folder_dialog_notification", false);mUserAgreeSharedPref.apply();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>取出数据是在判断四种逻辑时调用即可，直接通过SharedPreferences对象调用get方法取出数据进行判断。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">boolean first_notification = Utilities.getPrefs(v.getContext()).getBoolean("first_new_large_folder_dialog_notification", true);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>删除sharedpreference中特定的key</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">mUserAgreeSharedPref.remove("first_new_large_folder_dialog_notification").commit();<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-LottieAnimationView的使用"><a href="#4-LottieAnimationView的使用" class="headerlink" title="4.LottieAnimationView的使用"></a>4.LottieAnimationView的使用</h2><p>首先需要加入配置文件</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">//Lottie动画implementation "com.airbnb.android:lottie:3.6.0"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在需要放置动画的xml中放置Lottie</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;com.airbnb.lottie.LottieAnimationView        android:id="@+id/new_large_file_dialog_lottie"        android:layout_width="match_parent"        android:layout_height="wrap_content"        app:lottie_autoPlay="true"        app:lottie_loop="true"        app:lottie_fileName="data.json" //JSON文件需要放在 src/main/asset中        app:lottie_rawRes="@raw/animation" //JSON文件需要放置在 src/main/res/raw中与上面二选一即可/&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接着在Java文件中配置Lottie,其中新建LottieAnimationView对象通过R.id找到对应的law，可以设置是否自动播放，是否循环播放等。最后直接play即可。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">private LottieAnimationView mLottieAnimationView;//Lottie AnimationViewmLottieAnimationView = (LottieAnimationView) findViewById(R.id.new_large_file_dialog_lottie);mLottieAnimationView.setImageAssetsFolder("data.json");//配置JSONmLottieAnimationView.loop(true);//循环播放////设置X轴方向上的缩放比例，0f为不可见，1f原始大小 Ps.原setScale方法在2.0.0版本后已弃用//mLottieAnimationView.setScaleX(0.5f);////设置Y轴方向上的缩放比例//mLottieAnimationView.setScaleY(0.5f);mLottieAnimationView.playAnimation();//播放动画<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为了防止内存泄漏，应该在动画不需要播放的时候释放Lottie动画。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">mLottieAnimationView.setImageAssetsFolder(null);//传一个null，防止动画在后台继续播放<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android开发-修改Preference</title>
      <link href="/2022/10/19/android-kai-fa-xiu-gai-preference/"/>
      <url>/2022/10/19/android-kai-fa-xiu-gai-preference/</url>
      
        <content type="html"><![CDATA[<p>记录一下从事Android开发两个月以来学到的东西，虽然以后可能不会从事相关工作，还是纪念一下吧。</p><h1 id="主屏幕设置页面样式"><a href="#主屏幕设置页面样式" class="headerlink" title="主屏幕设置页面样式"></a>主屏幕设置页面样式</h1><h2 id="1-Preference样式修改"><a href="#1-Preference样式修改" class="headerlink" title="1.Preference样式修改"></a>1.Preference样式修改</h2><p>首先需要理解Preference是如何构成的。分析一下preference.xml可知每个item主要有三部分，如下：</p><p><img src="Android1-1.png"></p><p>第一部分为图标区域，第二部分是title和summary区域，第三部分是其他控件区域。</p><p>了解了其大体结构，就可以根据需求进行修改了。</p><p>图标区域没有所以设置为invisibility。中间使用了两个layout来区分，一个是有summary一个没有。</p><p>只有Title的layout里设置字体颜色、居中、margin等。有Summary的需要调整summary的位置和文字大小。</p><h2 id="2-按钮样式修改"><a href="#2-按钮样式修改" class="headerlink" title="2.按钮样式修改"></a>2.按钮样式修改</h2><p>修改了“Google左屏”类型为SwitchPreference的选择开关样式。</p><p>通过引用另一个widgetout来实现样式的更改。</p><p>创建customise_switchpreference.xml，定义一个<switch>控件，在其中配置thumb和track</switch></p><p>Switch有两个重要的属性：thumb和track，thumb是Switch中间圆，track是Switch底部长条。</p><h3 id="1-1thumb"><a href="#1-1thumb" class="headerlink" title="1.1thumb"></a>1.1thumb</h3><p>因为是通过<shape>方式实现的所以thumb和track的定义在drawble文件夹下。</shape></p><p>新建thumb文件，通过item引用来设置开和关的不同效果。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selector</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>drawable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/customise_sp_thumb_open<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>state_checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>drawable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/customise_sp_thumb_close<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selector</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>customise_sp_thumb_open.xml中可以配置半径、背景色、边界背景色等。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rectangle<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--设置圆的半径--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>size</span> <span class="token attr-name"><span class="token namespace">android:</span>height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>28dp<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>28dp<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--设置圆空心部分的背景色 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>corners</span> <span class="token attr-name"><span class="token namespace">android:</span>radius</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#FFFFFF<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--    &amp;lt;!&amp;ndash;设置圆边的背景色&amp;ndash;&amp;gt;--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stroke</span>        <span class="token attr-name"><span class="token namespace">android:</span>width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#001AFF<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="拿到settings里的thumb"><a href="#拿到settings里的thumb" class="headerlink" title="拿到settings里的thumb"></a>拿到settings里的thumb</h4><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layer-list</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>        <span class="token attr-name"><span class="token namespace">android:</span>top</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>left</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>right</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>bottom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4dp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span> <span class="token attr-name"><span class="token namespace">android:</span>shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>oval<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>size</span> <span class="token attr-name"><span class="token namespace">android:</span>height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/settingslib_switch_thumb_color<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layer-list</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>layer-list 是用来创建 LayerDrawable 的，LayerDrawable 是 DrawableResource 的一种，layer-list创建出来也就是一个drawable 图形。layer-list 的大致原理类似 RelativeLayout，是一层层的叠加 ，后添加的会覆盖先添加的。在 layer-list 中可以通过控制后添加图层距离最底部图层的左上右下的四个边距等属性，得到不同的显示效果。</p><p>layer-list中的item是按照顺序从下往上叠加的，即先定义的item在下面，后面的依次往上面叠放</p><h3 id="1-2track"><a href="#1-2track" class="headerlink" title="1.2track"></a>1.2track</h3><p>和thumb一样，在drawable文件夹下新建track.xml总文件，通过item重新配置开和关的样式。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selector</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>drawable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/customise_sp_track_open<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>state_checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>drawable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/customise_sp_track_close<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selector</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rectangle<span class="token punctuation">"</span></span> <span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--设置圆角矩形的高--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>size</span> <span class="token attr-name"><span class="token namespace">android:</span>height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>28dp<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>56dp<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--设置圆角矩形的圆角半径--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>corners</span> <span class="token attr-name"><span class="token namespace">android:</span>radius</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#001AFF<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--    &amp;lt;!&amp;ndash;设置圆边的背景色&amp;ndash;&amp;gt;--&gt;</span><span class="token comment">&lt;!--    &lt;stroke--&gt;</span><span class="token comment">&lt;!--        android:width="1dp"--&gt;</span><span class="token comment">&lt;!--        android:color="#001AFF"/&gt;--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="拿到settings里的track"><a href="#拿到settings里的track" class="headerlink" title="拿到settings里的track"></a>拿到settings里的track</h4><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rectangle<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>52dp<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>28dp<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/settingslib_switch_track_color<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>corners</span> <span class="token attr-name"><span class="token namespace">android:</span>radius</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>35dp<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em><strong>（光晕效果通过在<switch>控件中加入：“</switch></strong></em><em><strong>android</strong></em><em><strong>:background</strong></em>***=”@null”***<em><strong>”来取消光晕效果）</strong></em></p><h2 id="3-在设置界面加入入口"><a href="#3-在设置界面加入入口" class="headerlink" title="3.在设置界面加入入口"></a>3.在设置界面加入入口</h2><p>我们需要了解<meta-data>标签</meta-data></p><p>直译为“元数据”，该标签可为<activity>、<application>、<receiver>、<service>等组件提供附加数据项。<br>组件元素可以包含任意数量的<meta-data>子元素。系统将meta-data配置的数据存储于一个Bundle对象中，可以通过PackageItemInfo.metaData字段获取。</meta-data></service></receiver></application></activity></p><ul><li>android:name</li></ul><p>分配给该标签的键，即唯一名称。为确保名称唯一应使用Java风格命名约定</p><ul><li>android:resource</li></ul><p>对资源的引用，如“@string/app_name”。该资源ID可以通过该metaData.getInt()方法获取 。</p><ul><li>android:value</li></ul><p>分配给该标签的值，如String、Boolean等。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.android.settings.action.EXTRA_SETTINGS<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>  <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.android.settings.order<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-2<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>  <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.android.settings.category<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.android.settings.category.ia.homepage<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>  <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.android.settings.summary<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@string/summary_empty<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>  <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.android.settings.icon<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/ic_setting<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>com.android.settings.action.EXTRA_SETTINGS 设置遍历所有应用解析标记</p><p>com.android.settings.category.ia.homepage 在设置主界面显示</p><p>com.android.settings.icon 显示图标</p><p>com.android.settings.summary 显示子标题文字</p><p>com.android.settings.order 设置主界面排序，网络和互联网默认-120，只要大于即可排到第一</p><p>上述语句完成入口的加入配置icon等信息。</p>]]></content>
      
      
      <categories>
          
          <category> Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/2022/10/17/wo-de-di-yi-pian-bo-ke-wen-zhang/"/>
      <url>/2022/10/17/wo-de-di-yi-pian-bo-ke-wen-zhang/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h2><p>Node.js官方网站：<a href="https://nodejs.org/">https://nodejs.org</a> 选择对应的系统点击安装。<br>sudo su #切换到管理员<br>node -v #查看node版本<br>npm -v #查看npm版本<br>npm install -g cnpm –registry=<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a>    #安装淘宝的cnpm 管理器<br>cnpm -v    #查看cnpm版本</p><hr><h2 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2.安装Hexo"></a>2.安装Hexo</h2><p>cnpm install -g hexo-cli    #安装hexo框架<br>hexo -v    #查看hexo版本</p><h2 id="3-建立博客"><a href="#3-建立博客" class="headerlink" title="3.建立博客"></a>3.建立博客</h2><p>mkdir blog    #创建一个目录，博客所有文件都在这里<br>cd blog     #进入blog目录<br>sudo hexo init     #生成博客 初始化博客<br>hexo s    #启动本地博客服务<br><a href="http://localhost:4000/">http://localhost:4000/</a>    #本地访问地址<br>hexo n “我的第一篇文章” #创建一篇新的文章，新文章在source/_posts/下，可以使用vim命令便携，支持MarkDown</p><hr><h2 id="4-部署到Github上"><a href="#4-部署到Github上" class="headerlink" title="4.部署到Github上"></a>4.部署到Github上</h2><p>cnpm install –save hexo-deployer-git #在blog目录下安装git部署插件<br>然后在个人github上创建一个远程仓库，<em>注意：远程仓库名称：“githubname.io”，前缀必须和你github的名字一样，不然会访问不到（404）。</em><br>接着配置根目录下的_config.yml文件，找到deploy：</p><pre class="line-numbers language-none"><code class="language-none"># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git repo: https://github.com/YourGithubName/YourGithubName.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将repo替换为你自己的仓库链接。<strong>这里也可以使用ssh链接。</strong><br>#在blog路径下<br>hexo clean &amp;&amp; hero g #清理+生成（generate）<br>hexo d #部署到远程仓库。<em>注意：如果出现Fatal，可能是因为代理导致，先关掉。或者是配置一下git的ssh密钥。</em><br>这时就可以通过：<a href="https://yourgithubname.github.io/">https://YourGithubName.github.io</a> 访问你的博客。</p><hr><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>Hexo博客主题在themes文件夹下，可以在GitHub上挑选自己喜欢的主题并下载，这里推荐5种主题。</p><ol><li>Sakura 非常炫，缺点加载慢 <a href="https://github.com/honjun/hexo-theme-sakura">https://github.com/honjun/hexo-theme-sakura</a></li><li>Matery 预加载，强推 <a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></li><li>3-hexo 三段式，适合博文多的 <a href="https://github.com/yelog/hexo-theme-3-hexo">https://github.com/yelog/hexo-theme-3-hexo</a></li><li>butterfly 也是个好看的 <a href="https://github.com/jerryc127/hexo-theme-butterfly/tree/dev">https://github.com/jerryc127/hexo-theme-butterfly/tree/dev</a></li><li>Next 功能集成多，简洁 <a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></li></ol><p>选好主题之后cd到themes文件夹下，通过 git clone 下载主题代码。<br>修改根目录下的_config.yml 文件 ： theme: sakura。<br>接着运行 hexo clean &amp;&amp; hero g 和 hexo d。耐心等待一段时间再刷新网站。</p><p>这样Hexo快速布置个人博客就结束了，后续想更改主题的细节可以在主题中的_config.yml中进行修改。<br>学习路漫长，诸君一起努力。</p><h2 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h2><h3 id="Typora设置"><a href="#Typora设置" class="headerlink" title="Typora设置"></a>Typora设置</h3><p>这里博主使用的是Typora便携MarkDown，在添加图片之前需要更改一下设置。<br>打开typora，选择：<code>偏好设置 - 图像 - 插入图片时</code>，做如下更改：</p><ol><li>复制到指定路径 </li><li>./${filename}</li></ol><p>当插入图片时，会生成一个和文件名相同的文件夹，并将图片存入这个文件夹内。</p><h3 id="Hexo设置"><a href="#Hexo设置" class="headerlink" title="Hexo设置"></a>Hexo设置</h3><ol><li><p>安装 hexo-renderer-marked</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-renderer-marked<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在blog根目录下的_config.yml修改配置：post_asset_folder: true。</p></li><li><p>安装插件hex-image-link</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-image-link --saveNOTE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h2><p>假设文件名: ./test.md</p><p>图片路径: ./test/image.jpg</p><p>当插入图片 image.jpg 到 test.md 中时，<br>typora 的引用路径为</p><pre class="line-numbers language-none"><code class="language-none">![](test/image.jpg)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Hexo 发布后的引用路径为</p><pre class="line-numbers language-none"><code class="language-none">![](image.jpg)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>因此，typora的md文件引入hexo时，应转换路径。即删掉图片路径中的 “test/“部分；（此时md文件已不能正常显示图片，而 hexo server 可正常显示)</p><p>插件hexo-image-link帮助实现了这种路径转换。<br>安装后，typora 文件中正常显示的图片，在hexo发布后依旧能正常显示。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
